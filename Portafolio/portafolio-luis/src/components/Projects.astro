---
import GitHub from "./icons/Github.astro"
import JavaIcon from "./icons/JavaIcon.astro"
import SpringIcon from "./icons/SpringIcon.astro"
import Link from "./icons/Link.astro"
import MySqlIcon from "./icons/MySqlIcon.astro"
import LinkButton from "./LinkButton.astro"

const TAGS = {

  JAVA: {
    name: "Java",
    class: "bg-white text-black",
    icon: JavaIcon,
  },
  SPRING: {
    name: "SpringBoot",
    class: "bg-white text-black",
    icon: SpringIcon,
  },
  MYSQL: {
    name: "MySql",
    class: "bg-white text-black",
    icon: MySqlIcon,
  },
}
const PROJECTS = [
  {
    title: "ServiFix API",
    description:
      "API REST full para el proyecto ServiFix desarrollado con Java y Spring Boot. Este proyecto se comunica con una base de datos en Mysql y se pueden visualizar los diferentes endpoints para el manejo de usuarios, roles, publicaciones, etc.",
    image: "projects/svgl.webp",
    link: "https://servifix-api-docker.onrender.com/swagger-ui/index.html#/",
    github: "https://github.com/DahuX04/ServiFix-API-DahuX",
    tags: [TAGS.JAVA, TAGS.SPRING, TAGS.MYSQL],
  },
  {
    title: "URooms Microservices",
    description:
      "Aplicacion basada en microservicios encargada de ser un puente entre estudiantes ya arrendadores, en este proyecto se hizo uso de Keycloak para la autenticacion de usuarios, ademas de un sistema de mensajeria entre los usuarios, todo esto desarrollado con Java y Spring Boot.",
    image: "../src/images/UROOMS.png",
    link: "https://github.com/PermaTechOrganization/URooms-Microservice/tree/development",
    github: "https://github.com/PermaTechOrganization/URooms-Microservice/tree/development",
    tags: [TAGS.JAVA, TAGS.SPRING, TAGS.MYSQL],
  }
]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img alt="" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Code
              
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link}>
              <Link class="size-4" />
              Preview
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>


